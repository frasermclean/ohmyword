name: CI/CD

on:
  push:
    branches:
      - main
      - develop
    paths:
      - .github/workflows/**
      - FrontEnd/**
      - BackEnd/**
      - Deployment/**

  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/**
      - FrontEnd/**
      - BackEnd/**
      - Deployment/**

jobs:
  # Build frontend application
  build-frontend-app:
    name: Build frontend application
    uses: ./.github/workflows/build-frontend-app.yml
    with:
      build_configuration: ${{ github.ref_name == 'main' && 'production' || 'testing' }}

  # Build backend application
  build-backend-app:
    runs-on: ubuntu-latest
    name: Build backend application
    env:
      BUILD_CONFIGURATION: Release
      PUBLISH_DIRECTORY: /tmp/app
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install packages
      - name: Install packages
        run: dotnet restore

      # Build solution
      - name: Build solution
        run: dotnet build --configuration $BUILD_CONFIGURATION

      # Test solution
      - name: Test solution
        run: dotnet test --configuration $BUILD_CONFIGURATION

      # Publish application
      - name: Publish application
        working-directory: ./BackEnd/Api
        run: dotnet publish --configuration $BUILD_CONFIGURATION --output $PUBLISH_DIRECTORY

      # Upload published application artifact
      - name: Upload published application artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-app
          path: ${{ env.PUBLISH_DIRECTORY }}

  # Build functions application
  build-functions-app:
    name: Build functions application
    uses: ./.github/workflows/build-functions-app.yml

  # Deploy shared infrastructure
  deploy-shared-infra:
    name: Deploy shared infrastructure
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    environment: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
    permissions:
      id-token: write
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login to Azure
      - uses: azure/login@v1
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Deploy shared infrastructure
      - uses: azure/arm-deploy@v1
        name: Deploy shared infrastructure
        with:
          resourceGroupName: rg-ohmyword-shared
          template: ./Deployment/Infrastructure/shared/main.bicep
          parameters: >-
            ./Deployment/Infrastructure/shared/main.parameters.json
            dictionaryApiKey=${{ secrets.DICTIONARY_API_KEY }}
            thesaurusApiKey=${{ secrets.THESAURUS_API_KEY }}

  # Deploy application infrastructure
  deploy-app-infra:
    name: Deploy application infrastructure
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build-frontend-app
      - build-backend-app
      - deploy-shared-infra
    environment: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
    permissions:
      id-token: write
    env:
      RESOURCE_GROUP_NAME: ${{ github.ref_name == 'main' && 'rg-ohmyword-prod' || 'rg-ohmyword-test' }}
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login to Azure
      - uses: azure/login@v1
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Deploy infrastructure
      - uses: azure/arm-deploy@v1
        name: Deploy infrastructure
        env:
          APP_ENV: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
          DATABASE_THROUGHPUT: ${{ github.ref_name == 'main' && '600' || '400' }}
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./Deployment/Infrastructure/app/main.bicep
          parameters: >-
            ./Deployment/Infrastructure/app/main.parameters.json
            appEnv=${{ env.APP_ENV }}
            databaseThroughput=${{ env.DATABASE_THROUGHPUT }}

  # Deploy frontend application
  deploy-frontend-app:
    name: Deploy frontend application
    runs-on: ubuntu-latest
    needs: deploy-app-infra
    environment: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
    permissions:
      id-token: write
    env:
      APP_PATH: "${{ github.workspace }}/app"

    steps:
      # Login to Azure
      - uses: azure/login@v1
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Download application artifact
      - name: Download application artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-app
          path: ${{ env.APP_PATH }}

      # Deploy application
      - uses: azure/static-web-apps-deploy@v1
        name: Deploy application
        with:
          action: upload
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          app_location: ${{ env.APP_PATH }}
          skip_app_build: true
          skip_api_build: true

  # Deploy backend application
  deploy-backend-app:
    name: Deploy backend application
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: deploy-app-infra
    environment: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
    permissions:
      id-token: write
    env:
      APP_NAME: ${{ github.ref_name == 'main' && 'app-ohmyword-prod' || 'app-ohmyword-test' }}
    steps:
      # Login to Azure
      - uses: azure/login@v1
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Download application artifact
      - name: Download application artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-app

      # Deploy to Azure app service
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
