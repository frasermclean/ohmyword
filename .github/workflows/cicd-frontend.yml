name: CI/CD Frontend

on:
  push:
    branches:
      - main
      - develop
    paths:
      - .github/workflows/deploy-infra.yml
      - frontend/**

env:
  ARTIFACT_NAME: frontend-app

jobs:
  # Build application
  build-app:
    name: Build application
    runs-on: ubuntu-latest
    env:
      PROJECT_DIRECTORY: ${{ github.workspace }}/frontend
      BUILD_CONFIGURATION: ${{ github.ref_name == 'main' && 'production' || 'testing' }}
      BUILD_DIRECTORY: ${{ github.workspace }}/frontend/dist
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        name: Checkout repository
        with:
          submodules: true

      - run: ls -l

      # Setup Node environment
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Cache node modules
      - name: Cache Node modules
        uses: actions/cache@v4
        env:
          cache-name: npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      # Install dependencies
      - name: Install project dependencies
        working-directory: ${{ env.PROJECT_DIRECTORY }}
        run: npm ci

      # Build the client
      - name: Build client application
        working-directory: ${{ env.PROJECT_DIRECTORY }}
        run: npx ng build --configuration ${{ env.BUILD_CONFIGURATION }}

      # Copy static web app config
      - name: Copy static web app config
        run: cp ${{ env.PROJECT_DIRECTORY }}/staticwebapp.config.json

      # Upload build artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.BUILD_DIRECTORY }}

  # Deploy application
  deploy-app:
    name: Deploy application
    runs-on: ubuntu-latest
    needs:
      - build-app
    environment:
      name: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
      url: ${{ github.ref_name == 'main' && 'https://ohmyword.live' || 'https://test.ohmyword.live' }}
    permissions:
      id-token: write
    steps:
      # Download application artifact
      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}

      # Deploy application
      - uses: azure/static-web-apps-deploy@v1
        name: Deploy application
        with:
          action: upload
          azure_static_web_apps_api_token: ${{ secrets.AZURE_SWA_TOKEN }}
          app_location: ${{ steps.download-artifact.outputs.download-path }}
          skip_app_build: true
          skip_api_build: true
